/*
 * Reto #9
 * CÃ“DIGO MORSE
 * Fecha publicaciÃ³n enunciado: 02/03/22
 * Fecha publicaciÃ³n resoluciÃ³n: 07/03/22
 * Dificultad: MEDIA
 *
 * Enunciado: Crea un programa que sea capaz de transformar texto natural a cÃ³digo morse y viceversa.
 * - Debe detectar automÃ¡ticamente de quÃ© tipo se trata y realizar la conversiÃ³n.
 * - En morse se soporta raya "â€”", punto ".", un espacio " " entre letras o sÃ­mbolos y dos espacios entre palabras "  ".
 * - El alfabeto morse soportado serÃ¡ el mostrado en https://es.wikipedia.org/wiki/CÃ³digo_morse.
 */

function conversionTexto(texto) {
  const objMorse = {
    A: "._",
    B: "â€”Â·Â·Â·",
    C: "â€”Â·â€”Â·",
    D: "â€”Â·Â·",
    E: "Â·",
    F: "Â·Â·â€”Â·",
    G: "â€”â€”Â·",
    CH: "â€” â€” â€” â€”",
    H: "Â·Â·Â·Â·",
    I: "Â·Â·",
    J: "Â·â€”â€”â€”",
    K: "â€”Â·â€”",
    L: "Â·â€”Â·Â·",
    M: "â€”â€”",
    N: "â€”Â·",
    Ã‘: "â€” â€” Â· â€” â€”",
    O: "â€”â€”â€”",
    P: "Â·â€”â€”Â·",
    Q: "â€”â€”Â·â€”",
    R: "Â·â€”Â·",
    S: "Â·Â·Â·",
    T: "â€”",
    U: "Â·Â·â€”",
    V: "Â·Â·Â·â€”",
    W: "Â·â€”â€”",
    X: "â€”Â·Â·â€”",
    Y: "â€”Â·â€”â€”",
    Z: "â€”â€”Â·Â·",
    0: "â€”â€”â€”â€”â€”",
    1: "Â·â€”â€”â€”â€”",
    2: "Â·Â·â€”â€”â€”",
    3: "Â·Â·Â·â€”â€”",
    4: "Â·Â·Â·Â·â€”",
    5: "Â·Â·Â·Â·Â·",
    6: "â€”Â·Â·Â·Â·",
    7: "â€”â€”Â·Â·Â·",
    8: "â€”â€”â€”Â·Â·",
    9: "â€”â€”â€”â€”Â·",
    ".": "Â·â€”Â·â€”Â·â€”",
    ",": "â€”â€”Â·Â·â€”â€”",
    "?": "Â·Â·â€”â€”Â·Â·",
    '"': "Â·â€”Â·Â·â€”Â·",
    "/": "â€”Â·Â·â€”Â·",
  };
  let regExp = new RegExp(/[a-zA-Z]/, "g");

  if (texto.search(regExp) != -1) {
    textoAMorse(texto, objMorse);
  } else {
    textoNormal(texto, objMorse);
  }
}

function textoAMorse(texto, objMorse) {
  let convertidoAMorse = "";
  let arregloTexto = texto.split(" ");
  let arregloPalabra = [];
  arregloTexto.forEach((palabra, index) => {
    arregloPalabra = palabra.split("");
    for (let i = 0; i < arregloPalabra.length; i++) {
      for (const key in objMorse) {
        if (arregloPalabra[i].toUpperCase() == key) {
          arregloPalabra[i] = objMorse[key];
        }
      }
    }

    arregloTexto[index] = arregloPalabra.join(" ");
  });

  convertidoAMorse = arregloTexto.join("  ");
  console.log(
    "ðŸš€ ~ file: morse.js ~ line 69 ~ codigoMorse ~ convertidoAMorse",
    convertidoAMorse
  );
}

function textoNormal(texto, objMorse) {
  let convertidoNormal = "";
  let arregloTexto = texto.split("  ");
  let arregloPalabra = [];
  arregloTexto.forEach((palabra, index) => {
    arregloPalabra = palabra.split(" ");
    for (let i = 0; i < arregloPalabra.length; i++) {
      for (const key in objMorse) {
        if (arregloPalabra[i] == objMorse[key]) {
          arregloPalabra[i] = key;
        }
      }
    }

    arregloTexto[index] = arregloPalabra.join(" ");
  });

  convertidoNormal = arregloTexto.join("  ");
  console.log(
    "ðŸš€ ~ file: morse.js ~ line 102 ~ textoNormal ~ convertidoNormal",
    convertidoNormal
  );
}

conversionTexto("HOLA mundo , /");
conversionTexto("Â·Â·Â·Â· â€”â€”â€” Â·â€”Â·Â· ._  â€”â€” Â·Â·â€” â€”Â· â€”Â·Â· â€”â€”â€”  â€”â€”Â·Â·â€”â€”  â€”Â·Â·â€”Â·");
